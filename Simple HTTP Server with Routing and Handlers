package main

import (
	"encoding/json"
	"fmt"
	"net/http"
	"strconv"
)

type Response struct {
	Message string `json:"message"`
	Result  int    `json:"result,omitempty"`
}

func helloHandler(w http.ResponseWriter, r *http.Request) {
	response := Response{Message: "Welcome to the Go HTTP Server!"}
	w.Header().Set("Content-Type", "application/json")
	json.NewEncoder(w).Encode(response)
}

func addHandler(w http.ResponseWriter, r *http.Request) {
	query := r.URL.Query()
	a, err1 := strconv.Atoi(query.Get("a"))
	b, err2 := strconv.Atoi(query.Get("b"))

	if err1 != nil || err2 != nil {
		http.Error(w, "Invalid parameters. Please provide integers a and b.", http.StatusBadRequest)
		return
	}

	response := Response{
		Message: "Addition successful",
		Result:  a + b,
	}
	w.Header().Set("Content-Type", "application/json")
	json.NewEncoder(w).Encode(response)
}

func main() {
	http.HandleFunc("/", helloHandler)
	http.HandleFunc("/add", addHandler)

	fmt.Println("Server is running on port 8080...")
	if err := http.ListenAndServe(":8080", nil); err != nil {
		fmt.Println("Error starting server:", err)
	}
}
